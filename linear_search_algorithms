'''
Creation of linear search algorithms in Python, namely:
  - linear search
  - better linear search
  - sentinel linear search
  - recursive linear search
  
 Note: what are referred to as methods in Python are more generally
 called procedures in computer science
 
 Eventually I'll get around to writing these algorithms in C++.
 '''
 ---LINEAR SEARCH---
 
def linear_search(A, n, x):
    '''
    performs a linear search on an array
    A = an array
    n = number of elements in A to search through
    x = the value being searched for
    '''
    answer = "NOT-FOUND"
    for i in range(0, len(A), 1):
        if A[i] == x:
            answer = i
    return answer
    
 example:
        books = ["Where the Red Fern Grows", "The Grapes of Wrath", "A Farewell to Arms", 
                 "Crime and Punishment", "The Brothers Karamazov"]

        answer = linear_search(books, len(books), "The Brothers Karamazov")
        print(answer)

The running time for linear search is theta n while also noting that this then also means
the upper bound is O(n). The lower bound would be omega(1) if you found the book you were
right when you started searching.

---BETTER LINEAR SEARCH ---
def better_linear_search(A, n, x):
    '''
    Is an improved version of the binary search
    algortihm used beforehand.
    A = an array
    n = number of elements in A to search trough
    x = the value being search for
    '''
    for i in range(0, len(A), x):
        if A[i] == x:
            return i
    return "NOT-FOUND"
 
 Notice how instead having to go through the entire loop even when the value has been found
 it stops instead. This aspect drastically improves the efficiency of the linear search 
 algorithm.
 
 ---SENTINEL LINEAR SEARCH---
 Think about this algorithm in terms of searching for library books. Sentinel linear search grants
 you the ability to not have to worry about going off the bookshelf while you're searching for a book
 you believe you probably have. What happens is that you replace the last book on the shelf with an 
 empty box that has the title and author of the book you're looking for. After searching through all
 the books, you'll either have found the actual book on the bookshelf or the box. If it so happens to
 be that all you've turned up is the box, you should then double check that the book you replaced with
 the box is also not the book you were looking for.
 
 def sentinel_linear_search(A, n, x):
    '''
    A = an array
    n = the number of elements in A
    x = the value being searched for
    '''
    last = A[n]
    A[n] = x
    
    i = 0
    while A[i] != x:
        i += 1
    
    A[n] = last
    
    if i < n or A[n] == x:
        return i
    else:
        return "NOT-FOUND"

Note that the term sentinel is referring to the value we put into the array.

---RECURSIVE LINEAR SEARCH---
def recursive_linear_search(A, n, i, x):
    '''
    A = an array
    n = number of elements in A
    i = a parameter
    x = the value being searched for
    '''
    if i > n:
        return "NOT-FOUND"
    elif i <= n and A[i] = x:
        return i
    else:
        resursive_linear_search(A, n, i+1, x)

As can be told from the use of i, i is a parameter that ends the rescursive funtion when the function
has searched through every element in A.


